package io.testproject.generated.tests.emmanuelmendessfirstproject;

import io.appium.java_client.MobileElement;
import io.appium.java_client.android.nativekey.AndroidKey;
import io.appium.java_client.android.nativekey.KeyEvent;
import io.appium.java_client.remote.AndroidMobileCapabilityType;
import io.appium.java_client.remote.MobileCapabilityType;
import io.appium.java_client.remote.MobilePlatform;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.android.AndroidDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import java.lang.Exception;
import java.lang.Override;
import java.util.Arrays;
import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;

/**
 * This class was automatically generated by TestProject
 * Project: Emmanuel Mendes's first project
 * Test: Projeto teste
 * Generated by: Emmanuel Alves (emmanuel.alves@phoebustecnologia.com.br)
 * Generated on Mon Dec 19 20:07:01 GMT 2022.
 */
@DisplayName("Projeto teste")
public class ProjetoTeste implements ExceptionsReporter {
  public static AndroidDriver<? extends MobileElement> driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new AndroidDriver<>("JCwGsq-f3BDw5q1Xm4zdbME2c0EUylGhht90cvfVLvg", getCapabilities(), "Emmanuel Alves");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("Projeto teste")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute() throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;

    // 1. Click 'Preço do Alcool: ex: 1.90'
    GeneratedUtils.sleep(500);
    by = By.id("com.example.alcoolougasolina:id/preco_alcool");
    driver.findElement(by).click();

    // 2. Type '1.50' in 'Preço do Alcool: ex: 1.90'
    GeneratedUtils.sleep(500);
    by = By.id("com.example.alcoolougasolina:id/preco_alcool");
    driver.findElement(by).sendKeys("1.50");

    // 3. Click 'Preço do Gasolina: ex: 1.90'
    GeneratedUtils.sleep(500);
    by = By.id("com.example.alcoolougasolina:id/preco_gasolina");
    driver.findElement(by).click();

    // 4. Type '5.50' in 'Preço do Gasolina: ex: 1.90'
    GeneratedUtils.sleep(500);
    by = By.id("com.example.alcoolougasolina:id/preco_gasolina");
    driver.findElement(by).sendKeys("5.50");

    // 5. Click 'Calcular'
    GeneratedUtils.sleep(500);
    by = By.id("com.example.alcoolougasolina:id/button2");
    driver.findElement(by).click();

    // 6. Send key event '4'
    GeneratedUtils.sleep(500);
    driver.pressKey(new KeyEvent(Arrays.stream(AndroidKey.values()).filter(k -> k.getCode() == 4).findFirst().get()));

    // 7. Does 'Melhor escolha e o alcool' contain 'Melhor escolha e o alcool'?
    GeneratedUtils.sleep(500);
    by = By.id("com.example.alcoolougasolina:id/resultado");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Melhor escolha e o alcool"));

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of());
  }

  public static DesiredCapabilities getCapabilities() {
    DesiredCapabilities capabilities = new DesiredCapabilities();
    capabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, MobilePlatform.ANDROID);
    capabilities.setCapability(MobileCapabilityType.UDID, "0123456789ABCDEF");
    capabilities.setCapability(CapabilityType.BROWSER_NAME, "");
    capabilities.setCapability(AndroidMobileCapabilityType.APP_PACKAGE, "com.example.alcoolougasolina");
    capabilities.setCapability(AndroidMobileCapabilityType.APP_ACTIVITY, "com.example.alcoolougasolina.MainActivity");
    return capabilities;
  }
}
